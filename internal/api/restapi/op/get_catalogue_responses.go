// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	model "github.com/fpawel/mproducto/internal/api/model"
)

// GetCatalogueOKCode is the HTTP code returned for type GetCatalogueOK
const GetCatalogueOKCode int = 200

/*GetCatalogueOK Catalogue of products

swagger:response getCatalogueOK
*/
type GetCatalogueOK struct {

	/*
	  In: Body
	*/
	Payload []*model.CatalogueNode `json:"body,omitempty"`
}

// NewGetCatalogueOK creates GetCatalogueOK with default headers values
func NewGetCatalogueOK() *GetCatalogueOK {

	return &GetCatalogueOK{}
}

// WithPayload adds the payload to the get catalogue o k response
func (o *GetCatalogueOK) WithPayload(payload []*model.CatalogueNode) *GetCatalogueOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get catalogue o k response
func (o *GetCatalogueOK) SetPayload(payload []*model.CatalogueNode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCatalogueOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*model.CatalogueNode, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetCatalogueDefault Error

swagger:response getCatalogueDefault
*/
type GetCatalogueDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewGetCatalogueDefault creates GetCatalogueDefault with default headers values
func NewGetCatalogueDefault(code int) *GetCatalogueDefault {
	if code <= 0 {
		code = 500
	}

	return &GetCatalogueDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get catalogue default response
func (o *GetCatalogueDefault) WithStatusCode(code int) *GetCatalogueDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get catalogue default response
func (o *GetCatalogueDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get catalogue default response
func (o *GetCatalogueDefault) WithPayload(payload *model.Error) *GetCatalogueDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get catalogue default response
func (o *GetCatalogueDefault) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCatalogueDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
